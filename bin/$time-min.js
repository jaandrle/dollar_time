const format_objects=(({time:e,date:a,seconds:i})=>({time:e,date:a,time_seconds:Object.assign(i,e),date_time:Object.assign({},e,a),date_time_seconds:Object.assign({},Object.assign(i,e),a)}))({time:{hour:"2-digit",minute:"2-digit"},date:{year:"numeric",day:"2-digit",month:"2-digit"},seconds:{second:"2-digit"}}),format_arrays=(({dash:e,colon:a,space:i,two_dig:t})=>({SQL_DATE:[["year","numeric"],e,["month",t],e,["day",t]],SQL_TIME:[["hour",t,"h23"],a,["minute",t],a,["second",t]],SQL:[["year","numeric"],e,["month",t],e,["day",t],i,["hour",t,"h23"],a,["minute",t],a,["second",t]]}))({dash:["text","-"],colon:["text",":"],space:["text"," "],two_dig:"2-digit"}),ordinal_numbers=["th","st","nd","rd"],isDateString=e=>-1!==e.indexOf("-"),isTimeString=e=>-1!==e.indexOf("T");let internal_locale="en-GB",internal_zone="";const ary_ianna_time_zones=Object.freeze(["Africa/Abidjan","Africa/Accra","Africa/Algiers","Africa/Bissau","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/El_Aaiun","Africa/Johannesburg","Africa/Juba","Africa/Khartoum","Africa/Lagos","Africa/Maputo","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Sao_Tome","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Asuncion","America/Atikokan","America/Bahia_Banderas","America/Bahia","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Cayenne","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson_Creek","America/Dawson","America/Denver","America/Detroit","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Fort_Nelson","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Chicago","America/Chihuahua","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Inuvik","America/Iqaluit","America/Jamaica","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/La_Paz","America/Lima","America/Los_Angeles","America/Maceio","America/Managua","America/Manaus","America/Martinique","America/Matamoros","America/Mazatlan","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port_of_Spain","America/Port-au-Prince","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Sitka","America/St_Johns","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Vancouver","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/Palmer","Antarctica/Rothera","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Atyrau","Asia/Baghdad","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Colombo","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Chita","Asia/Choibalsan","Asia/Irkutsk","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kathmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qyzylorda","Asia/Riyadh","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ulaanbaatar","Asia/Urumqi","Asia/Ust-Nera","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faroe","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/Stanley","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/Perth","Australia/Sydney","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belgrade","Europe/Berlin","Europe/Brussels","Europe/Budapest","Europe/Bucharest","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Helsinki","Europe/Chisinau","Europe/Istanbul","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Lisbon","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Oslo","Europe/Paris","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/Saratov","Europe/Simferopol","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zaporozhye","Europe/Zurich","Indian/Cocos","Indian/Chagos","Indian/Christmas","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Reunion","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Chatham","Pacific/Chuuk","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Wake","Pacific/Wallis"]),ary_ianna_time_offsets=Object.freeze({"-01:00":238,"-02:00":242,"-03:00":107,"-04:00":49,"-05:00":92,"-06:00":62,"-07:00":120,"-08:00":337,"-09:00":320,"-09:30":330,"-10:00":323,"-11:00":332,"+01:00":15,"+02:00":8,"+03:00":270,"+04:00":306,"+04:30":191,"+05:00":221,"+05:30":173,"+05:45":194,"+06:00":207,"+06:30":232,"+07:00":182,"+08:00":220,"+08:30":210,"+08:45":249,"+09:00":176,"+09:30":248,"+10:00":229,"+11:00":314,"+12:00":345,"+13:00":316,"+14:00":326,BST:275,CET:284,CEST:284,EET:264,EEST:264,WET:274,WEST:274});export function fromDate(e){return toDateArray(e.toISOString())}export function fromDateArguments(...e){return toDateArray((e.filter(e=>void 0!==e).length?new Date(...e):new Date).toISOString())}export function fromNow(){return toDateArray((new Date).toISOString())}export function fromString(e,a=internal_zone){if(!e)return fromNow();let i=toDateArray(e);return 3!==i.length?isDateString(i[0])?isTimeString(i[1])?i[2]=a:(i[2]=i[1]||a,i[1]=""):i.unshift(""):!i[2]&&a&&(i[2]=a),i}function toDateArray(e){let a,i,t="",r="",n="",o="";for(;e.length;)a=e[0],/\d/.test(a)?e.search(/\d\d\d\d-\d\d-\d\d/)?e.search(/\d\d\/\d\d\/\d\d\d\d/)?e.search(/\d\d:\d\d:\d\d/)?e.search(/\d\d:\d\d/)?e=e.substr(1):(r="T"+e.substr(0,5)+":00",e=e.substr(5)):(r="T"+e.substr(0,8),e=e.substr(8)):(t=e.substr(0,10).split("/").sort(()=>-1).join("-"),e=e.substr(10)):(t=e.substr(0,10),e=e.substr(10)):/[ ,\._]/.test(a)||!e.substring(0,2).search(/T\d/)?e=e.substr(1):e.search(/[\+\-]\d\d:\d\d/)?e.search(/[A-Z]{2,}/)?"Z"===a?(n="Z",e=e.substr(1)):e=e.substr(1):(o=-1===(i=e.search(/[^A-Z]/))?e:e.substr(0,i),e=e.substr(o.length),"CET"===o&&(n=o,o="")):(o=e.substr(0,6),e=e.substr(6),Reflect.has(ary_ianna_time_offsets,o)?(n=o,o=""):"00:00"===o.substr(1,5)&&(n="Z",o="")),t&&r&&n&&(e="");return[t,r,n]}function toStringFromObject(e=format_arrays.SQL,{locale:a=internal_locale,declension:i=!0,timeZone:t=internal_zone}={}){return r=>e.map(evaluateFormatObject(toDate(r),a,t,i)).join("")}function evaluateFormatObject(e,a,i,t){const r=generateTimeZoneFormatObject.bind(null,i);return function([n,o,c]){let s=evaluateNthFromObject(e,n,o,c,t,a,i,r);return"2-digit"===o&&1===String(s).length&&(s="0"+s),"two_letters"===c?s=s.substr(0,2):"ordinal_number"===c&&-1!==a.indexOf("en")&&(s=getOrdinalSuffix(s)),s}}function evaluateNthFromObject(e,a,i,t,r,n,o,c){switch(!0){case"text"===a:return i;case"week"===a:return getWeekNumber(o?new Date(((e,a,i)=>e({timeZone:a,year:"numeric"})+"-"+double(e({timeZone:a,month:i}))+"-"+double(e({timeZone:a,day:i}))+"T"+double(e({timeZone:a,hour:i}))+":"+double(e({timeZone:a,minute:i}))+":"+double(e({timeZone:a,second:i})))(Date.prototype.toLocaleString.bind(e,"en-GB"),o,"2-digit")):e);case"weekday"===a&&"numeric"===i:return getWeekDay()(e);case"month"===a&&"long"===i&&r:return e.toLocaleString(n,c({[a]:i,day:"numeric"})).replace(/[\d \.\/\\]/g,"");case"hour"===a&&"a"===t.toLowerCase():return e.toLocaleString("A"===t?"en-US":"en-GB",c({[a]:i,hourCycle:"h12"})).replace(/[\d \.\/\\]/g,"");case"hour"===a:return e.toLocaleString(n,c({[a]:i,hourCycle:t})).replace(/[ \.\/\\pam]/gi,"");default:return e.toLocaleString(n,c({[a]:i}))}}function getFormatObject(e=""){let a,i,t=[];for(;e.length;)switch(e[0]){case"M":r();break;case"d":n();break;case"W":c("week","W");break;case"Y":o();break;case"D":c("day","D");break;case"H":s("hour","H","h23");break;case"k":s("hour","k","h24");break;case"h":s("hour","h","h12");break;case"A":u("A");break;case"a":u("a");break;case"m":m("minute","m");break;case"s":m("second","s");break;case"[":l();break;default:i=e[0],(a=t.length-1)>-1&&"text"===t[a][0]?t[a][1]+=i:t.push(["text",i]),e=e.slice(1)}function r(){let a="numeric";if(e.search(/MMMM/))if(e.search(/MMM/))if(e.search(/MM/)){if(!e.search(/Mo/))return e=e.slice(2),t.push(["month",a,"ordinal_number"]);e=e.slice(1)}else a="2-digit",e=e.slice(2);else a="short",e=e.slice(3);else a="long",e=e.slice(4);t.push(["month",a])}function n(){let a="numeric";if(e.search(/dddd/))if(e.search(/ddd/)){if(!e.search(/dd/))return a="short",e=e.slice(2),t.push(["weekday",a,"two_letters"]);e=e.slice(1)}else a="short",e=e.slice(3);else a="long",e=e.slice(4);t.push(["weekday",a])}function o(){let a="2-digit";e.search(/YYYY/)?e=e.slice(2):(a="numeric",e=e.slice(4)),t.push(["year",a])}function c(a,i){let r="numeric";if(!e.search(new RegExp(i+"o")))return e=e.slice(2),t.push([a,r,"ordinal_number"]);e.search(new RegExp(i+i))?e=e.slice(1):(r="2-digit",e=e.slice(2)),t.push([a,r])}function s(a,i,r){let n="numeric";e.search(new RegExp(i+i))?e=e.slice(1):(n="2-digit",e=e.slice(2)),t.push([a,n,r])}function u(a){e=e.slice(1),t.push(["hour","numeric",a])}function m(a,i){let r="numeric";e.search(new RegExp(i+i))?e=e.slice(1):(r="2-digit",e=e.slice(2)),t.push([a,r])}function l(){let a=e.indexOf("]");-1===a&&(a=e.length),t.push(["text",e.slice(1,a)]),e=e.slice(a+1)}return t}export function toDate(e){if(!e||!Array.isArray(e))return new Date;let[a,i,t]=e;return a||(a=fromNow()[0]),i||(i="T00:00:00"),t||(t=getTimeZoneOffsetString(a)),"CET"!==t&&"CEST"!==t||(t=getCETOffset([a,i])),new Date(a+i+t)}export function toLocaleString(e="date_time",{locale:a=internal_locale,timeZone:i=internal_zone}={}){return t=>toDate(t).toLocaleString(a,generateTimeZoneFormatObject(i,format_objects[e]))}export function toRelative(e,a){return i=>getRelative(getDiffMs(e)(i),a)}export function getDiff(e,a="seconds",i=!1){const t=getDiffMs(e,-{seconds:1e3,minutes:6e4,hours:36e5,days:864e5,weeks:6048e5,months:24192e5,years:290304e5}[a]);return function(e){const a=t(e);return i?a:Math.floor(a)}}function getDiffMs(e,a=1){const i=!!e&&toDate(e).getTime();return function(e){return(toDate(e).getTime()-(i||toDate(fromNow()).getTime()))/a}}function getRelativeIntl(e,a,i,{locales:t=internal_locale,localeMatcher:r,numeric:n="auto",style:o}={}){return e||(a=-a),new Intl.RelativeTimeFormat(t,{localeMatcher:r,numeric:n,style:o}).format(a,i)}function getRelativeBackup(e,a,i){return(e?"in %s":"%s ago").replace("%s",a+" "+i)}export function getRelative(e,a){const{abs:i,floor:t,round:r}=Math,n="function"!=typeof Intl.RelativeTimeFormat?getRelativeBackup:getRelativeIntl,o=!(e<0);return(e=t(i(e)/1e3))<60?n(o,e,"seconds",a):(e=t(e/60))<60?n(o,e,"minutes",a):(e=r(e/60))<24?n(o,e,"hours",a):(e/=24)<29.5?n(o,r(e),"days",a):(e/=30.41666)<12?n(o,r(e),"months",a):n(o,e=r(e/12),"years",a)}export function toString(e,a){return toStringFromObject(Array.isArray(e)?e:e?getFormatObject(e):void 0,a)}export function getCETOffset([e,a]=[]){if(!e||!a){let i=fromNow();e||(e=i[0]),a||(a=i[1].replace(/\.\d+/,""))}const i=e+a,t=e.split("-").reverse().join("/")+", "+a.replace("T",""),[r,n]=["+01:00","+02:00"].map(e=>new Date(i+e).toLocaleString("en-GB",{timeZone:"Europe/Prague"}));return t===r?"+01:00":t===n?"+02:00":"Z"}export function getTimeZone(e,{locale:a=internal_locale,description:i="long",offset:t=!1}={}){i=i.toLocaleLowerCase();const[r,n,o]=getDateArrayFromMixed(e),c=new Date([r,n,o].join("")),s=-1!==Object.keys(ary_ianna_time_offsets).indexOf(o)?{timeZone:ary_ianna_time_zones[ary_ianna_time_offsets[o]]}:{};let u="none"===i?"":c.toLocaleString(a,Object.assign({timeZoneName:i},s)).replace(c.toLocaleString(a,s),"").trim();const m=t?"UTC"+("Z"===o?getTimeZoneOffsetStringFromOffset(c.getTimezoneOffset()):c.toLocaleString(a,Object.assign({timeZoneName:"short"},s)).replace(c.toLocaleString(a,s),"").replace(/[^\d\+\-\:]/g,"").trim()):"";return u&&m&&(u=" ("+u+")"),m+u}export function getCurrentTimeZone({locale:e=internal_locale,description:a="long",offset:i=!1}={}){if("ianna"!==(a=a.toLocaleLowerCase()))return getTimeZone(void 0,{locale:e,description:a,offset:i});let t,r,n="";if("undefined"!=typeof Intl&&"function"==typeof Intl.DateTimeFormat){if("function"!=typeof(t=Intl.DateTimeFormat()||{}).resolvedOptions)return;r=t.resolvedOptions().timeZone,n=-1!==Object.keys(ary_ianna_time_offsets).indexOf(r)?ary_ianna_time_zones[ary_ianna_time_offsets[r]]:r}const o=i?getTimeZone(void 0,{locale:e,description:"none",offset:!0}):"";return n&&o&&(n=" ("+n+")"),o+n}export function getTimeZoneOffset(e,a=internal_zone){const i=new Date(getDateArrayFromMixed(e).join(""));return a?getTimeZoneDiffOffset(i,a):i.getTimezoneOffset()}function getTimeZoneDiffOffset(e,a=internal_zone){const[i="+",t=0,r=0]=e.toLocaleString("en-GB",{timeZone:a,weekday:"short",timeZoneName:"short"}).replace(/(\+|\-)/g,(e,a)=>a+":").replace(/[^\d:\+\-]/g,"").split(":");return("-"===i?-1:1)*(60*Number(t)+Number(r))+e.getTimezoneOffset()}export function getTimeZoneOffsetString(e){return getTimeZoneOffsetStringFromOffset(getTimeZoneOffset(e))}function generateTimeZoneFormatObject(e,a){return e?-1!==ary_ianna_time_zones.indexOf(e)?Object.assign({timeZone:e},a):void 0!==ary_ianna_time_offsets[e]?Object.assign({timeZone:ary_ianna_time_zones[ary_ianna_time_offsets[e]]},a):a:a}function getDateArrayFromMixed(e){return e?Array.isArray(e)?e:toDateArray(e):fromNow()}function getTimeZoneOffsetStringFromOffset(e){const{floor:a,abs:i}=Math;let t=e>0?"-":"+";return t+=double(a((e=i(e))/60))+":"+double(e%60)}function addDays(e){return a=>(a.setDate(a.getDate()+e),a)}function addMonths(e){return a=>(a.setMonth(a.getMonth()+e),a)}function getWeekDay(e="numeric",{locale:a=internal_locale,timeZone:i=internal_zone}={}){return"numeric"===e?e=>e.getDay():t=>t.toLocaleString(a,{timeZone:i,weekday:e})}function getWeekNumber(e){const a=new Date(e.valueOf());a.setDate(a.getDate()+3-(e.getDay()+6)%7);var i=a.valueOf();return a.setMonth(0,1),4!==a.getDay()&&a.setMonth(0,1+(4-a.getDay()+7)%7),1+Math.ceil((i-a)/6048e5)}export function modify(e){const a=Object.keys(e);return function(i){const t=toDate(i);for(let i,r=0;i=a[r];r++)"addDays"===i?addDays(e[i])(t):"add"===i.substr(0,3)?modifyAdditions(i,e[i],t):"setMonth"===i?t.setMonth(e[i]-1):Reflect.has(t,i)?t[i](e[i]):"setDay"===i&&t.setDate(e[i]);return fromDate(t)}}function modifyAdditions(e,a,i){const t=e.substr(3);return i["set"+t](i["get"+t]()+a),i}export function redefineTimeZone(e=internal_zone){return([a="",i=""]=[])=>[a,i,e]}export const Date_utils={getWeekDay:getWeekDay,getWeekNumber:getWeekNumber,addDays:addDays,addMonths:addMonths};export function double(e){return 1===(e=String(e)).length?"0"+e:e}export function daysInMonth(e,a=(new Date).getFullYear()){return new Date(+a,+e,0).getDate()}export function getDaysInMonth([e=fromNow()[0]]=[]){const[a,i,t]=e.split("-").map(Number);return daysInMonth(i,t)}export function getMonthName(e,a){if("number"!=typeof e&&(e=parseInt(e)),isNaN(e))return!1;let i=["December","January","February","March","April","May","June","July","August","September","October","November"][e%12];return a&&(-1===a&&(a=3,4===i.length&&(a=4)),i=i.substring(0,a)),i}export function getOrdinalSuffix(e){const a="number"==typeof e?e:parseInt(e);if(isNaN(a))return e;let i=a%100;return e+(ordinal_numbers[(i-20)%10]||ordinal_numbers[i]||ordinal_numbers[0])}export const _=void 0;export const formats=format_arrays;export const getTimeZones=()=>ary_ianna_time_zones;export const isTimeZone=e=>-1!==ary_ianna_time_zones.indexOf(e);export const setInternalZone=e=>internal_zone=e;export const setInternalLocale=e=>internal_locale=e;